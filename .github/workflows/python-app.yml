name: Build ClockToDo EXE

on:
  push:
    tags:
      - 'v*'  # 仅在推送 v1.0.0 这类 tag 时触发打包
  workflow_dispatch:  # 允许手动触发

permissions:
  contents: write  # 允许创建 Release 并上传资产

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'  # 使用 Python 3.8 版本
        cache: 'pip'  # 启用pip缓存

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        pip install matplotlib
        pip install tk
        pip install tkcalendar
        pip install numpy

    - name: Create Version Info
      shell: pwsh
      run: |
        $version = "${{ github.ref_name }}"
        $version = $version -replace '^v',''
        $version = if ($version) { $version } else { '1.0.0.0' }
        $version_parts = $version.Split('.')
        if ($version_parts.Length -lt 4) {
            $version = $version + ('.0' * (4 - $version_parts.Length))
        }
        $content = "# UTF-8`nVSVersionInfo(ffi=FixedFileInfo(filevers=($($version.Split('.') -join ',')),prodvers=($($version.Split('.') -join ',')),mask=0x3f,flags=0x0,OS=0x40004,fileType=0x1,subtype=0x0,date=(0, 0)),kids=[StringFileInfo([StringTable(u'080404b0',[StringStruct(u'CompanyName', u'ClockToDo'),StringStruct(u'FileDescription', u'ClockToDo - 专注时间管理工具'),StringStruct(u'FileVersion', u'$version'),StringStruct(u'InternalName', u'ClockToDo'),StringStruct(u'LegalCopyright', u'Copyright (c) 2025'),StringStruct(u'OriginalFilename', u'ClockToDo.exe'),StringStruct(u'ProductName', u'ClockToDo'),StringStruct(u'ProductVersion', u'$version')])])])"
        Set-Content -Path version_info.txt -Value $content -Encoding UTF8

    - name: Build EXE with PyInstaller
      run: |
        pyinstaller --clean -F -w -i clockToDo.ico --version-file version_info.txt --add-data "clockToDo.ico;." --name ClockToDo --hidden-import tkinter --hidden-import tkcalendar --hidden-import matplotlib main.py

    - name: Generate SHA-256 checksum
      shell: pwsh
      run: |
        $hash = Get-FileHash dist\ClockToDo.exe -Algorithm SHA256
        $hash.Hash | Out-File -FilePath dist\ClockToDo.exe.sha256

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ClockToDo
        path: |
          dist/ClockToDo.exe
          dist/ClockToDo.exe.sha256

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      if: startsWith(github.ref, 'refs/tags/')
      with:
        name: "ClockToDo ${{ github.ref_name }}"
        body: |
          ## ClockToDo ${{ github.ref_name }}

          ### 📝 版本说明
          - 此版本由 GitHub Actions 自动构建
          - 发布时间：${{ github.event.head_commit.timestamp }}
          
          ### 🔍 SHA-256 校验
          请下载后使用以下命令验证文件完整性：
          ```powershell
          Get-FileHash ClockToDo.exe -Algorithm SHA256
          ```
          
          ### 🔒 安全提示
          - 本程序完全开源，不含任何恶意代码
          - 仅在用户 AppData 目录保存数据
          - 无任何网络通信功能
          
          ### 📥 文件清单
          - ClockToDo.exe - 主程序
          - ClockToDo.exe.sha256 - SHA256校验文件
        files: |
          dist/ClockToDo.exe
          dist/ClockToDo.exe.sha256
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
